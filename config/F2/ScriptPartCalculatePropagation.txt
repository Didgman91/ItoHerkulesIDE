? \" \"
? \"IFeld     \",\"Ip        \",\"Tk        \",\"Td        \",\"Ttot\"
? \"--------------------------------------------------------------------\"
? \" \"

winkel=0

ac(1:sam,1:sam)=Cmplx[1,0]
erg1(1:max)=0.0
erg2(1:max)=0.0
erg3(1:max)=0.0
erg4(1:max)=0.0
erg5(1:max)=0.0

Do j,1,max
 
 ax(1:sam,1:sam)=Cmplx[1,0]
 Grid ax,p1,p2,p3,p4
 
! x=RandomReal p1,p2,streuanz 
! y=RandomReal p3,p4,streuanz 
 x=Load "{py_scatterPlateRandomX}"
 y=Load "{py_scatterPlateRandomY}"
 Sphere ax,x,y,d/2,d/2,nwasser,0,lam

 If j .EQ. 1 ! gilt nur fuer erste Schicht
   ax(1:sam,1:sam)=Cmplx[1,0]
   PupilFilter ax,obj 
   Grid ax,p1,p2,p3,p4  
   a2=Illumination ax,PlaneWave, 1,0, 0,0,lam ! Beleuchtung mit Planwelle 
   !a2=Illumination ax,Gauss, 1,0,  10*mm , 10*mm,0,0, lam ! (x,y,z sind shift-Werte) ! Beleuchtung miauss
   !a2=Illumination ax,AGauss, 1,0,  10*mm,20*mm , 10*mm,0,0, lam ! (x,y,z sind shift-Werte) ! eleuchtunmit Gauss",
   !PlotArray Abs[a2],\"Objekt\",400,400
 Else
   PupilFilter a2,ax ! ab zweiter Schicht, belegt Array mit Filter
 EndIf

 PwPropagationNF a2,lam,dp,dp,1,x0 ! Propagiert Feld a2 mit FFT-Beampropagation
 

! If MOD[j,5] .eq. 1
! If j .EQ. 1
   feld=ArrayResize2D Abs[a2], ePixelX,ePixelY
      
   intensity=Intensity feld   

   !feldMX=MirrorX intensity 
   !feldMY=MirrorY intensity  
   !feldMYR90=Rotate90 feldMY

   !BMPInit ePixelX,ePixelY
   !BMPSetPen 255,255,255
   !BMPSetPen2 128,128,128
   
   !BMPPlot feld, ePixelX, ePixelY
   !BMPSave "{py_outputPath}/Feld_{py_fileName}_.bmp"

   !BMPClear

   BMPInit ePixelX,ePixelY
   BMPSetPen 255,255,255
   BMPSetPen2 128,128,128
   
   BMPPlot intensity, ePixelX, ePixelY
   BMPSave "{py_outputPath}/Intensitaet_{py_fileName}.bmp"

   
   SaveNPY "{py_outputPath}/Feld_{py_fileName}_", feld, j
   SaveNPY "{py_outputPath}/Intensitaet_{py_fileName}_", intensity, j
! EndIf
 
 a0=EnergyDensity a2
 b=Pupil a2,lam,dp,dp,1 ! FourierTransfo
 
 c0=IntegralIntensity b  ! Gesamtintensit√§t
 d0=Intensity[b(#+1,#+1)]    ! Kollimierte Transmission
 b(#+1,#+1)=Cmplx[0]
 e0=IntegralIntensity b  ! Diffuse Transmission 
 f0=d0+e0                ! Totale Transmission
 
 erg1(j)=a0
 erg2(j)=c0
 erg3(j)=d0/c0
 erg4(j)=e0/c0
 erg5(j)=f0/c0

 ? '(F0.7)'erg1(j),'(1X,E9.2)'erg2(j),'(2X,F0.7)'erg3(j),'(2X,F0.7)'erg4(j),'(2X,F0.7)'erg5(j)

EndDo ! j

 
BMPInit 850,700
BMPSetPen 255,255,255
BMPSetPen2 128,128,128

BMPColorMap BW
BMPSetWin 10,10,310,300, 1,1,sam,sam
BMPListPlot1d erg1,\"GesamtEnergie Feld\",\"z\",\"Efeld\"

BMPSetWin 450,10,750,310, 1,1,3,3
BMPListPlot1d erg2,\"Energie Pupille\",\"z\",\"Epup\"

BMPSetWin 10,360,310,660, 1,1,sam,sam
BMPListPlot1d2 erg3,erg4,\"Koll./Diff. Transmission\",\"z\",\"T\"

BMPSetWin 450,360,750,660, 1,1,3,3
BMPListPlot1d erg5,\"Transmission\",\"z\",\"T\"

BMPSave "{py_outputPath}/nebel_{py_fileName}_.bmp"

End 