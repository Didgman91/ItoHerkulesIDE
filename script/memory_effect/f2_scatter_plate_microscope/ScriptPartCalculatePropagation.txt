!------------------------------------------------------------------------------

? " "
? "IFeld     ","Ip        ","Tk        ","Td        ","Ttot"
? "--------------------------------------------------------------------"
? " "

winkel=0

ac(1:sam,1:sam)=Cmplx[1,0]
erg1(1:max)=0.0
erg2(1:max)=0.0
erg3(1:max)=0.0
erg4(1:max)=0.0
erg5(1:max)=0.0

Subroutine export(a2sub, ePixelXsub, ePixelYsub, jsub)
    intensity=Intensity a2sub
    argument=Arg a2sub
    
    Call bmp2_init
    Call bmp2_plot2d_1(argument,"Argument_{py_fileName}"+'(I0.4)'jsub,50,"L")
    Call bmp2_plot2d_2(intensity,"Intensity_{py_fileName}"+'(I0.4)'jsub,50,"L")
    Call bmp2_save("{py_outputPath}/Overview_{py_fileName}_layer"+'(I0.4)'jsub+".bmp")
    
    BMPInit ePixelXsub,ePixelYsub
    BMPSetPen 255,255,255
    BMPSetPen2 128,128,128
       
    BMPPlot intensity, ePixelXsub, ePixelYsub
    BMPSave "{py_outputPath}/Intensity_{py_fileName}_layer", jsub
       
    BMPClear
EndSub  

Subroutine export_with_argument(a2sub, ePixelXsub, ePixelYsub, jsub)
    intensity=Intensity a2sub
    argument=Arg a2sub
    
    Call bmp2_init
    Call bmp2_plot2d_1(argument,"Argument_{py_fileName}"+'(I0.4)'jsub,50,"L")
    Call bmp2_plot2d_2(intensity,"Intensity_{py_fileName}"+'(I0.4)'jsub,50,"L")
    Call bmp2_save("{py_outputPath}/Overview_{py_fileName}_layer"+'(I0.4)'jsub+".bmp")
    
    BMPInit ePixelXsub,ePixelYsub
    BMPSetPen 255,255,255
    BMPSetPen2 128,128,128
       
    BMPPlot intensity, ePixelXsub, ePixelYsub
    BMPSave "{py_outputPath}/Intensity_{py_fileName}_layer", jsub
       
    BMPClear
       
    BMPInit ePixelXsub,ePixelYsub
    BMPSetPen 255,255,255
    BMPSetPen2 128,128,128
    
    BMPPlot argument, ePixelXsub, ePixelYsub
    BMPSave "{py_outputPath}/Argument_{py_fileName}_layer", jsub
    
    BMPClear
EndSub  


! -------- create spot --------
    ax(1:sam,1:sam)=Cmplx[1,0]
    Grid ax,p1,p2,p3,p4  
    
    ! --- shift illumination ---
    test={py_point_source_xpos}*mu+{py_point_source_xpos}*mu
    
    If test .NE. 0
        aShiftPoint(1:sam, 1:sam)=Cmplx[0,0]
        Grid aShiftPoint,p1,p2,p3,p4
        GridSet aShiftPoint,{py_point_source_xpos}*mu,{py_point_source_ypos}*mu,Cmplx[1,0]
           
        aShift=Pupil aShiftPoint, lam, dp, dp
        
        ax=ax*aShift
    EndIf
    ! ~~~ shift illumination ~~~
        
    na=0.0015004035103485358  ! laser scanner [KW13]
    
    r1=0.61*lam/na
    ? "spot r_1 = ", r1
    
    ? "NA: ",'(F0.7)'na
    a2=IPupil ax, lam, dp,dp, na
    
    Call export_with_argument(a2, ePixelX, ePixelY, 0)
       
! -------- propagte to scatter plate --------
    naProp=0.02499219116020307 ! math.sin(math.atan(25/2/500))
    PwPropagationNF a2,lam,dp,dp,naProp,30*mm ! Propagiert Feld a2 mit FFT-Beampropagation
   
! -------- set scatter plate --------

    ax(1:sam,1:sam)=Cmplx[1,0]
    Grid ax,p1,p2,p3,p4
     
    xAll=Load "{py_scatterPlateRandomX}"
    yAll=Load "{py_scatterPlateRandomY}"
     
    x=xAll(:,1)
    y=yAll(:,1)
    Sphere ax,x,y,d/2,d/2,nwasser,0,lam
     
    PupilFilter a2,ax ! ab zweiter Schicht, belegt Array mit Filter
    
    Call export_with_argument(a2, ePixelX, ePixelY, 3)


! -------- propagate --------
start=4
Do j,start,max
    a3=CopyArray a2   ! start every time at the scatter plate
    
    ? " Propagete ", j, "NA ", naProp
    PwPropagationNF a3,lam,dp,dp,naProp,x0*(j-start+1) ! Propagiert Feld a3 mit FFT-Beampropagation
    
    If j .EQ. start
        Call export_with_argument(a3, ePixelX, ePixelY, j)
    Else
        If j .EQ. start+1
            Call export_with_argument(a3, ePixelX, ePixelY, j)
        Else
            If MOD[j,{py_save_every_no_layer}] .EQ. 0
                Call export(a3, ePixelX, ePixelY, j)
            EndIf
        EndIf
    EndIf
    
    a0=EnergyDensity a3
    b=Pupil a3,lam,dp,dp,1 ! FourierTransfo
     
    c0=IntegralIntensity b  ! Gesamtintensit√§t
    d0=Intensity[b(#+1,#+1)]    ! Kollimierte Transmission
    b(#+1,#+1)=Cmplx[0]
    e0=IntegralIntensity b  ! Diffuse Transmission 
    f0=d0+e0                ! Totale Transmission
     
    erg1(j)=a0
    erg2(j)=c0
    erg3(j)=d0/c0
    erg4(j)=e0/c0
    erg5(j)=f0/c0
    
    ? '(F0.7)'erg1(j),'(1X,E9.2)'erg2(j),'(2X,F0.7)'erg3(j),'(2X,F0.7)'erg4(j),'(2X,F0.7)'erg5(j)

EndDo ! j